n6.9 
верно: a, d, e, f, h
неверно: b, c, g

n6.10
1. Доступ к элементу структуры с помощью точки (.) и указателя (->)
2. (&) определение адресса структуры
3. Инициализация
4. Присваивание поэлементно и структуры в целом
5. Передача в качестве аргумента и возвращение из функции, в том числе и отдельных элементов структуры


n6.11
а) нет если нужно изменить структуру в функции, то нужно передавать указатель
b) да
c) нет, нужно указывать скобки, тк операция точка выше операции звездочка
d) да

n6.12
a) да
b) нет, возвращаем адресс локальной переменной, которого не существует
c) нет, не создаем переменную 
d) да

n6.14!!!
a) struct point { 
	double x; 
	double y;
   };
b) struct cpoint { 
	double x; 
	double y; 
	char colour[20];
   };
c) struct complex { 
	int x; 
	int y;
   };
d) struct rational { 
	int x;
	unsighned short y;
	};

n6.19
без for вывод будет иметь вид
a[0].s=abcd  p -> s=abcd  a[2].dp -> s=abcd // в этой строке выводится только одно значение разными способами
++(p->s)=bcd // указатель показывает на строку из символов и начинает вывод со следующего
a[(++p) -> i].s=ijkl // ++р показывает на второй объект массива и из этого элемента берется число 2, и выводится строка от 3 элемента массива
a[--(p -> dp -> i)].s=ijkl  // берется строка от 3 элемента массива с индексом 2

ошибка при выводе в цикле for
в описании структуры нет элемента с названием 1,2 или 3 и если брать предыдущий адресс то там будет неопределенное значение для индекса 0
эти две ошибки в выводе --a[i].i
в выводе ++a[i].s[3] адресс прибавляется к символу, в каждой строке не более 4 элеметнов, поэтому обращение к 5 элементу с индексом 4 ошибка


n6.20
все верно


